apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'ru.d10xa.allure'

defaultTasks 'clean', 'test'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "ru.d10xa:gradle-allure-plugin:0.5.5"
    }
}

allure {
    aspectjweaver = true
    junit = true
    allureResultsDir = "$buildDir/allure-results"
    allureReportDir = "$buildDir/allure-report"

    allureVersion = "1.4.24.RC3"
    aspectjVersion = "1.8.9"
    allureJunitAspectjAdaptorVersion = "0.1.1"

    clean = true
    tasks.withType(Test)*.finalizedBy allureReport
}

repositories {
     maven { url "http://maven.bbpd.io/content/repositories/learn_91_testing" }
     maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile group: 'blackboard', name: 'selenium-core', version:'1.0.3-SNAPSHOT'
    compile group: 'blackboard', name: 'requirements-coverage', version:'1.0-SNAPSHOT'
}

test {
    maxParallelForks = 4
    testLogging {
        events "passed", "skipped", "failed", "standardOut"
        exceptionFormat "full"

    debug {
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat "full"
    }

    info.events = debug.events
    info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (!desc.parent) {
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}